<div class="container my-4">

<button type="button" class="btn btn-outline-secondary mb-3" id="btn-back">
  <i class="bi bi-arrow-left"></i> Retour au choix
</button>

	<p>
		Ces paramètres sont essentiels pour un fonctionnement clair, équitable et conforme.
	</p>

	<p>
		Pour gérer l’exploitation et la refacturation de l’énergie de mes
		<strong>{{ totalConnectors }}
			points de charge</strong>, je renseigne les éléments suivants et je paramètre les tarifs d’utilisation.
	</p>

	<h5>Tarification pour les différentes utilisations et utilisateurs :</h5>
	<p>
		<strong>Pour les véhicules de flotte</strong>
		(véhicules de service et véhicules de fonction), 
		    la refacturation s’appliquera automatiquement sur la base du prix d’achat réel de l’électricité
		<span class="price-gradient">+ 0,03 € TTC / kWh</span>.
	</p>

	<div class="form-check mt-4">
		<input class="form-check-input" type="checkbox" id="acceptTerms" onchange="toggleButton()">
		<label class="form-check-label" for="acceptTerms" data-step="5">
			J’ai lu et j’accepte
		</label>
	</div>

	<button id="confirmButton" type="button" class="btn btn-primary mt-3" disabled>Confirmer</button>
</div>

<style>
	.price-gradient {
		background: linear-gradient(to right, #ec008c, #f6941f);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		font-weight: bold;
	}
</style>

{% block javascript %}
<script>
document.addEventListener('DOMContentLoaded', () => {
	const confirmBtn = document.getElementById('confirmButton');

	confirmBtn.addEventListener('click', () => {
		const currentStep = confirmBtn.closest('.step');
		const nextStep = document.getElementById('step-5');

		if (currentStep && nextStep) {
			currentStep.classList.remove('active');
			nextStep.classList.remove('d-none');
			nextStep.classList.add('active');

			if (typeof updateSidebar === 'function') {
				updateSidebar(5);
			}
		}
	});
});
</script>

{% endblock %}


