{% extends 'base.client.html.twig' %}

{% block body %}
	<div class="container my-4">
		{% include 'client/form/warning.html.twig' %}
		{% include 'client/form/administration.html.twig' %}
		{% include 'client/form/recap_charging_point.html.twig' %}
		{% include 'client/form/borne_configuration.html.twig' %}
		{% include 'client/form/localisation.html.twig' %}
	</div>

	<div id="customModal" class="custom-modal">
		<div class="custom-modal-content">
			<span class="custom-modal-close" id="customModalClose">&times;</span>
			<h5 class="mb-3">Confirmation</h5>
			<p>Êtes-vous sûr de ce choix ? Il influencera le contrat généré par la suite.</p>
			<div class="d-flex justify-content-end gap-2 mt-3">
				<button class="btn btn-secondary" id="cancelCustomModal">Non</button>
				<button class="btn btn-primary" id="confirmChoiceBtn">Oui, je confirme</button>
			</div>
		</div>
	</div>

{% endblock %}

{% block javascripts %} 
<script>
		document.addEventListener('DOMContentLoaded', () => {
		    const nextButtons = document.querySelectorAll('.btn-next');
		    const prevButtons = document.querySelectorAll('.btn-prev');
		
		    function getLogicalStep(stepNumber) {
		        if (stepNumber <= 2) return 1;
		        if (stepNumber <= 3) return 2;
		        return 3;
		    }
		
		    function updateSidebar(currentStep) {
		        const logicalStep = getLogicalStep(currentStep);
		        document.querySelectorAll('.circle-step').forEach(el => {
		            const step = parseInt(el.dataset.step);
		            if (step <= logicalStep) {
		                el.classList.add('active');
		            } else {
		                el.classList.remove('active');
		            }
		        });
		    }
		
		    nextButtons.forEach(button => {
		        button.addEventListener('click', () => {
		            const currentStep = button.closest('.step');
		            const currentStepId = parseInt(button.dataset.step);
		            const nextStep = document.querySelector(`#step-${currentStepId + 1}`);
		
		            if (nextStep) {
		                currentStep.classList.remove('active');
		                nextStep.classList.add('active');
		                updateSidebar(currentStepId + 1);
		            }
		        });
		    });
		
		    prevButtons.forEach(button => {
		        button.addEventListener('click', () => {
		            const currentStep = button.closest('.step');
		            const currentStepId = parseInt(currentStep.id.split('-')[1]);
		            const previousStep = document.querySelector(`#step-${currentStepId - 1}`);
		
		            if (previousStep) {
		                currentStep.classList.remove('active');
		                previousStep.classList.add('active');
		                updateSidebar(currentStepId - 1);
		            }
		        });
		    });
		
		    updateSidebar(1);
		});
		</script>

	 <script>
		document.addEventListener('DOMContentLoaded', () => {
		    const nextButtons = document.querySelectorAll('.btn-next');
		    const prevButtons = document.querySelectorAll('.btn-prev');
		
		    function getLogicalStep(stepNumber) {
		        if (stepNumber <= 2) return 1;
		        if (stepNumber <= 4) return 2;
		        return 3;
		    }
		
		    function updateSidebar(currentStep) {
		        const logicalStep = getLogicalStep(currentStep);
		        document.querySelectorAll('.circle-step').forEach(el => {
		            const step = parseInt(el.dataset.step);
		            if (step <= logicalStep) {
		                el.classList.add('active');
		            } else {
		                el.classList.remove('active');
		            }
		        });
		    }
		
		    nextButtons.forEach(button => {
		        button.addEventListener('click', () => {
		            const currentStep = button.closest('.step');
		            const currentStepId = parseInt(button.dataset.step);
		            const nextStep = document.querySelector(`#step-${currentStepId + 1}`);
		
		            if (nextStep) {
		                currentStep.classList.remove('active');
		                nextStep.classList.add('active');
		                updateSidebar(currentStepId + 1);
		            }
		        });
		    });
		
		    prevButtons.forEach(button => {
		        button.addEventListener('click', () => {
		            const currentStep = button.closest('.step');
		            const currentStepId = parseInt(currentStep.id.split('-')[1]);
		            const previousStep = document.querySelector(`#step-${currentStepId - 1}`);
		
		            if (previousStep) {
		                currentStep.classList.remove('active');
		                previousStep.classList.add('active');
		                updateSidebar(currentStepId - 1);
		            }
		        });
		    });
		
		    const customModal = document.getElementById('customModal');
		    const closeModalBtn = document.getElementById('customModalClose');
		    const cancelModalBtn = document.getElementById('cancelCustomModal');
		    const confirmBtn = document.getElementById('confirmChoiceBtn');
		    const choixStep = document.querySelector('.choix-step');
		    const configStep = document.querySelector('.config-step');
		    let selectedConfig = null;
		
		    document.querySelectorAll('.option-card').forEach(card => {
		        card.addEventListener('click', () => {
		            document.querySelectorAll('.option-card').forEach(c => c.classList.remove('active'));
		            card.classList.add('active');
		            selectedConfig = card.dataset.value;
		            customModal.classList.add('show');
		        });
		    });
		
		    closeModalBtn.addEventListener('click', () => {
		        customModal.classList.remove('show');
		    });
		
		    cancelModalBtn.addEventListener('click', () => {
		        customModal.classList.remove('show');
		    });
		
		    confirmBtn.addEventListener('click', () => {
		        customModal.classList.remove('show');
		
		        choixStep.classList.remove('active');
		        configStep.classList.remove('d-none');
		        configStep.classList.add('active');
		
		configStep.querySelectorAll('.config-content').forEach(block => block.classList.add('d-none'));
		
		const selectedBlock = document.getElementById(`config-${selectedConfig}`);
		if (selectedBlock) selectedBlock.classList.remove('d-none');
		        updateSidebar(3);
		    });
		
		    updateSidebar(1);
		});
		</script>

	 <script>
		document.addEventListener('DOMContentLoaded', function () {
		    const options = document.querySelectorAll('.option-card');
		    const formStepConfig = document.querySelector('.config-step');
		    const configContents = document.querySelectorAll('.config-content');
		
		    options.forEach(option => {
		        option.addEventListener('click', () => {
		            option.querySelector('input[type="radio"]').checked = true;
		
		            options.forEach(opt => opt.classList.remove('selected'));
		            option.classList.add('selected');
		
		            const selectedValue = option.getAttribute('data-value');
		            formStepConfig.classList.remove('d-none');
		
		            configContents.forEach(content => {
		                content.classList.add('d-none');
		            });
		
		            const target = document.getElementById(`config-${selectedValue}`);
		            if (target) target.classList.remove('d-none');
		        });
		    });
		
		document.querySelectorAll('.btn-back').forEach(btn => {
		  btn.addEventListener('click', () => {
		    const choixStep = document.querySelector('.choix-step');
		    const configStep = document.querySelector('.config-step');
		
		    configStep.classList.remove('active');
		    configStep.classList.add('d-none');
		    configStep.querySelectorAll('.config-content').forEach(content => content.classList.add('d-none'));
		    choixStep.classList.add('active');
		
		    updateSidebar(2);
		  });
		});
		
		
		});
		</script>


	 <script>
		  function toggleButton() {
		    const checkbox = document.getElementById('acceptTerms');
		    const button = document.getElementById('confirmButton');
		    button.disabled = !checkbox.checked;
		  }
	
		  document.querySelectorAll('[data-step="back"]').forEach(btn => {
		    btn.addEventListener('click', () => {
		      const currentStep = document.querySelector('.step-active');
		      if (!currentStep) return;
		
		      const prevStep = currentStep.previousElementSibling;
		      if (prevStep && prevStep.classList.contains('step')) {
		        currentStep.classList.remove('step-active');
		        prevStep.classList.add('step-active');
		      }
		    });
		  });
	
	    document.getElementById('revealButtonMixte').addEventListener('click', () => {
	    document.getElementById('tarif-details-mixte').classList.add('show');
	    document.getElementById('tarif-intro-mixte').classList.add('shrink');
	    document.getElementById('revealButtonMixte').style.display = 'none';
	    });
	
	    function showNextStep(currentInputId, nextStepId, optionalTitleId = null) {
	    const input = document.getElementById(currentInputId);
	    input.addEventListener('input', () => {
	        if (input.value.trim() !== '') {
	        const nextStep = document.getElementById(nextStepId);
	        if (nextStep && nextStep.style.display === 'none') {
	            nextStep.style.display = 'block';
	        }
	
	        if (optionalTitleId) {
	            const title = document.getElementById(optionalTitleId);
	            if (title && title.style.display === 'none') {
	            title.style.display = 'block';
	            }
	        }
	        }
	    });
	    }
	
	    showNextStep('input1-mixte', 'step2-mixte');
	    showNextStep('input2-mixte', 'step3-mixte', 'optionsTitle-mixte');
	    showNextStep('input3-mixte', 'step4-mixte');
	    showNextStep('input4-mixte', 'submitBlock-mixte');
	</script>

	 <script>
document.addEventListener("DOMContentLoaded", function () {
    const input = document.getElementById('client_contract_form_address_fullAddress');
    const resultBox = document.getElementById('autocomplete-results');

    input.addEventListener('input', async function () {
        const query = input.value.trim();
        if (query.length < 3) {
            resultBox.style.display = 'none';
            resultBox.innerHTML = '';
            return;
        }

        const response = await fetch(`https://api-adresse.data.gouv.fr/search/?q=${encodeURIComponent(query)}&limit=5`);
        const data = await response.json();

        resultBox.innerHTML = '';
        data.features.forEach(feature => {
            const item = document.createElement('button');
            item.type = 'button';
            item.classList.add('list-group-item', 'list-group-item-action');
            item.textContent = feature.properties.label;
            item.addEventListener('click', () => {
                input.value = feature.properties.label;
                resultBox.innerHTML = '';
                resultBox.style.display = 'none';

                document.getElementById('client_contract_form_address_streetNumber').value = feature.properties.housenumber || '';
                document.getElementById('client_contract_form_address_streetName').value = feature.properties.street || '';
                document.getElementById('client_contract_form_address_postalCode').value = feature.properties.postcode || '';
                document.getElementById('client_contract_form_address_city').value = feature.properties.city || '';
                document.getElementById('client_contract_form_address_country').value = 'France';
                document.getElementById('client_contract_form_address_latitude').value = feature.geometry.coordinates[1];
                document.getElementById('client_contract_form_address_longitude').value = feature.geometry.coordinates[0];
                document.getElementById('client_contract_form_address_region').value = feature.properties.context?.split(',')[1]?.trim() || '';
                document.getElementById('client_contract_form_address_department').value = feature.properties.context?.split(',')[0]?.trim() || '';
            });

            resultBox.appendChild(item);
        });

        resultBox.style.display = 'block';
    });

    document.addEventListener('click', function (e) {
        if (!input.contains(e.target) && !resultBox.contains(e.target)) {
            resultBox.style.display = 'none';
        }
    });
});
</script>

<script>
  document.getElementById('revealButton').addEventListener('click', () => {
    document.getElementById('tarif-details').classList.add('show');
    document.getElementById('tarif-intro').classList.add('shrink');
    document.getElementById('revealButton').style.display = 'none';
  });

  function showNextStep(currentInputId, nextStepId, optionalTitleId = null) {
    const input = document.getElementById(currentInputId);
    input.addEventListener('input', () => {
      if (input.value.trim() !== '') {
        const nextStep = document.getElementById(nextStepId);
        if (nextStep && nextStep.style.display === 'none') {
          nextStep.style.display = 'block';
        }

        if (optionalTitleId) {
          const title = document.getElementById(optionalTitleId);
          if (title && title.style.display === 'none') {
            title.style.display = 'block';
          }
        }
      }
    });
  }

  showNextStep('input1', 'step2');
  showNextStep('input2', 'step3', 'optionsTitle');
  showNextStep('input3', 'step4');
  showNextStep('input4', 'submitBlock');
</script>

<script>
  document.querySelectorAll('[data-step="back"]').forEach(btn => {
    btn.addEventListener('click', () => {
      const currentStep = document.querySelector('.step-active');
      if (!currentStep) return;

      const prevStep = currentStep.previousElementSibling;
      if (prevStep && prevStep.classList.contains('step')) {
        currentStep.classList.remove('step-active');
        prevStep.classList.add('step-active');
      }
    });
  });
</script>

<script>
document.addEventListener('DOMContentLoaded', () => {
	const confirmBtn = document.getElementById('submitBlock');

	confirmBtn.addEventListener('click', () => {
		const currentStep = confirmBtn.closest('.step');
		const nextStep = document.getElementById('step-5');

		if (currentStep && nextStep) {
			currentStep.classList.remove('active');
			nextStep.classList.remove('d-none');
			nextStep.classList.add('active');

			if (typeof updateSidebar === 'function') {
				updateSidebar(5);
			}
		}
	});
});
</script>


<script>
document.addEventListener('DOMContentLoaded', () => {
	const confirmBtn = document.getElementById('submitBlock-mixte');

	confirmBtn.addEventListener('click', () => {
		const currentStep = confirmBtn.closest('.step');
		const nextStep = document.getElementById('step-5');

		if (currentStep && nextStep) {
			currentStep.classList.remove('active');
			nextStep.classList.remove('d-none');
			nextStep.classList.add('active');

			if (typeof updateSidebar === 'function') {
				updateSidebar(5);
			}
		}
	});
});
</script> 

<script>
document.addEventListener('DOMContentLoaded', () => {
	const confirmBtn = document.getElementById('confirmButton');

	if (confirmBtn) {
		confirmBtn.addEventListener('click', () => {
			const currentStep = confirmBtn.closest('.step');
			const nextStep = document.getElementById('step-5');

			if (currentStep && nextStep) {
				currentStep.classList.remove('active');
				nextStep.classList.remove('d-none');
				nextStep.classList.add('active');

				if (typeof updateSidebar === 'function') {
					updateSidebar(5);
				}
			}
		});
	}
});

</script>

 <script>
    document.addEventListener('DOMContentLoaded', function () {
        const inputs = document.querySelectorAll('.address-autocomplete');

        inputs.forEach(input => {
            const index = input.dataset.index;

            let timeout = null;
            let currentResults = [];

            const dropdown = document.createElement('div');
            dropdown.classList.add('autocomplete-dropdown');
            dropdown.style.position = 'absolute';
            dropdown.style.zIndex = '1000';
            dropdown.style.backgroundColor = 'white';
            dropdown.style.border = '1px solid #ccc';
            dropdown.style.width = '100%';
            dropdown.style.display = 'none';
            input.parentNode.appendChild(dropdown);

            input.addEventListener('input', function () {
                const query = input.value;
                clearTimeout(timeout);

                if (query.length < 3) {
                    dropdown.style.display = 'none';
                    return;
                }

                timeout = setTimeout(() => {
                    fetch(`https://api-adresse.data.gouv.fr/search/?q=${encodeURIComponent(query)}&limit=5`)
                        .then(response => response.json())
                        .then(data => {
                            currentResults = data.features;
                            dropdown.innerHTML = '';

                            currentResults.forEach(feature => {
                                const option = document.createElement('div');
                                option.classList.add('dropdown-item');
                                option.style.padding = '8px';
                                option.style.cursor = 'pointer';
                                option.innerText = feature.properties.label;
                                dropdown.appendChild(option);

                                option.addEventListener('click', () => {
                                    const props = feature.properties;
                                    const geometry = feature.geometry;

                                    input.value = props.name + ' ' + props.street || props.label;

                                    document.getElementById(`station_${index}_postal`).value = props.postcode || '';
                                    document.getElementById(`station_${index}_city`).value = props.city || '';
                                    document.getElementById(`station_${index}_latitude`).value = geometry.coordinates[1];
                                    document.getElementById(`station_${index}_longitude`).value = geometry.coordinates[0];

                                    dropdown.style.display = 'none';
                                });
                            });

                            dropdown.style.display = 'block';
                        });
                }, 300);
            });

            document.addEventListener('click', function (e) {
                if (!dropdown.contains(e.target) && e.target !== input) {
                    dropdown.style.display = 'none';
                }
            });
        });
    });
</script>

{% endblock %}
