{% extends 'base.html.twig' %}

{% block body %}
<div class="container">
    <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#progressModal">Ouvrir</button>

    <div class="modal fade" id="progressModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Information du client</h5>
                </div>
                <div class="modal-body">
                    <div class="progress mb-3">
                        <div id="progressBar" class="progress-bar" style="width: 0%;">0%</div>
                    </div>

                    <form id="multiStepForm" method="post">
                        <!-- Étape 1 : Client -->
                        <div class="form-step" id="step1">
                            {{ form_start(clientForm) }}
                            {{ form_widget(clientForm) }}
                            {{ form_end(clientForm) }}
                        </div>

                        <!-- Étape 2 : Interventions dynamiques -->
                        <div class="form-step d-none" id="step2">
                            {{ form_start(interventionForm) }}
                            <div id="interventionContainer" data-prototype="{{ form_widget(interventionForm.interventions.vars.prototype)|e('html_attr') }}">
                                {% for intervention in interventionForm.interventions %}
                                    <div class="intervention-item">
                                        {{ form_widget(intervention) }}
                                        <button type="button" class="btn btn-danger btn-sm remove-intervention">Supprimer</button>
                                    </div>
                                {% endfor %}
                            </div>
                            <button type="button" class="btn btn-primary btn-sm" id="addIntervention">+ Ajouter</button>
                            {{ form_end(interventionForm) }}
                        </div>
                    </form>
                </div>

                <div class="modal-footer">
                    <button type="button" id="prevBtn" class="btn btn-secondary d-none">Précédent</button>
                    <button type="button" id="nextBtn" class="btn btn-primary">Suivant</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let currentStep = 1;
    const totalSteps = 2;

    function updateStep() {
        document.querySelectorAll('.form-step').forEach(step => step.classList.add('d-none'));
        document.getElementById('step' + currentStep).classList.remove('d-none');

        const progress = ((currentStep - 1) / (totalSteps - 1)) * 100;
        document.getElementById('progressBar').style.width = progress + '%';
        document.getElementById('progressBar').textContent = Math.round(progress) + "%";

        document.getElementById('modalTitle').textContent = currentStep === 1 ? "Information du client" : "Information de l'installation";

        document.getElementById('prevBtn').classList.toggle('d-none', currentStep === 1);
        document.getElementById('nextBtn').textContent = (currentStep === totalSteps) ? "Envoyer" : "Suivant";
    }

    document.getElementById('nextBtn').addEventListener('click', () => {
        if (currentStep < totalSteps) {
            currentStep++;
            updateStep();
        } else {
            document.getElementById('multiStepForm').submit();
        }
    });

    document.getElementById('prevBtn').addEventListener('click', () => {
        if (currentStep > 1) {
            currentStep--;
            updateStep();
        }
    });

    document.addEventListener('DOMContentLoaded', function () {
    let addInterventionButton = document.getElementById('addIntervention');
    let interventionContainer = document.getElementById('interventionContainer');

    if (!interventionContainer.dataset.prototype) {
        console.error("data-prototype is missing on #interventionContainer");
        return;
    }

    let prototype = interventionContainer.dataset.prototype;

    addInterventionButton.addEventListener('click', function () {
        let newIndex = interventionContainer.children.length;
        let newElement = document.createElement('div');
        newElement.innerHTML = prototype.replace(/__name__/g, newIndex);
        newElement.classList.add('intervention-item');
        interventionContainer.appendChild(newElement);
    });

    document.addEventListener('click', function (event) {
        if (event.target.classList.contains('remove-intervention')) {
            event.target.closest('.intervention-item').remove();
        }
    });
});
</script>
{% endblock %}