{% extends 'base.html.twig' %}

{% block body %}
<div class="d-flex" style="margin-top: 80px;">
    <!-- SIDEBAR -->
    <aside class="sidebar bg-white border-end p-4" style="width: 250px; min-height: 100vh;">
        <h6 class="mb-4 text-uppercase text-muted">Supervision</h6>
        <ul class="list-unstyled">
            <li class="sidebar-step active mb-3">
                <i class="bi bi-sliders"></i> Étape 1 : Bornes
            </li>
            <li class="sidebar-step text-muted mb-3">
                <i class="bi bi-person-circle"></i> Étape 2 : Client
            </li>
            <li class="sidebar-step text-muted mb-3">
                <i class="bi bi-plug"></i> Étape 3 : Configuration
            </li>
            <li class="sidebar-step text-muted">
                <i class="bi bi-check-circle"></i> Étape 4 : Récapitulatif
            </li>
        </ul>
    </aside>

    <main class="flex-grow-1 p-5">
        <div id="step-1" class="step active">
            <h2 class="mb-4">Étape 1 : Choisissez le nombre de bornes à superviser</h2>

            <label for="sliderInterventions" class="form-label">Nombre de bornes :</label>
            <input type="range" min="1" max="10" value="1" id="sliderInterventions" class="form-range">

            <p class="mt-2">Nombre sélectionné : <strong><span id="sliderValue">1</span></strong> borne(s)</p>

            <div id="dotPreview" class="dot-container my-4"></div>

            <div class="mt-4 text-end">
                <button type="button" class="btn-next btn btn-primary">Suivant</button>
            </div>
        </div>
    </main>
</div>
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener("DOMContentLoaded", function () {
    const slider = document.getElementById("sliderInterventions");
    const display = document.getElementById("sliderValue");
    const dotPreview = document.getElementById("dotPreview");

    const updateCount = (val) => {
        display.textContent = val;
        dotPreview.innerHTML = '';

        for (let i = 1; i <= val; i++) {
            const dot = document.createElement("div");
            dot.classList.add("dot");
            dot.innerText = i;
            dotPreview.appendChild(dot);
        }
    };

    if (slider && display && dotPreview) {
        slider.addEventListener("input", () => {
            updateCount(slider.value);
        });

        updateCount(slider.value); // initial render
    }
});
</script>
{% endblock %}

{% block stylesheets %}
<style>
    .sidebar-step {
        display: flex;
        align-items: center;
        font-size: 15px;
    }
    .sidebar-step i {
        margin-right: 8px;
        font-size: 18px;
    }
    .sidebar-step.active {
        font-weight: 600;
        color: #0d6efd;
    }

    .dot-container {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
        justify-content: start;
    }

    .dot {
        width: 32px;
        height: 32px;
        background-color: #0d6efd;
        border-radius: 50%;
        color: white;
        font-weight: bold;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.9rem;
        transition: transform 0.2s;
    }

    .dot:hover {
        transform: scale(1.15);
        background-color: #0b5ed7;
    }
</style>
{% endblock %}