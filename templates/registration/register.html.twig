{% extends 'base.login.html.twig' %}

{% block title %}Inscription
{% endblock %}

{% block stylesheet %}
	{{ parent() }}
	<style>
		.vh-100 {
			height: 100vh;
		}

		.col-left {
			background: #fff;
			display: flex;
			align-items: center;
			justify-content: center;
			padding: 3rem;
		}

		.col-right {
			position: relative;
			overflow: hidden;
			display: flex;
			align-items: center;
			justify-content: center;
			padding: 3rem 2rem;
		}

		.col-right .bg-img {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			object-fit: cover;
			filter: blur(6px);
			transform: scale(1.1);
			z-index: 1;
		}

		.col-right .overlay {
			position: absolute;
			inset: 0;
			background: rgba(255, 255, 255, 0.6);
			z-index: 2;
		}

		.left-content {
			max-width: 300px;
			text-align: center;
			opacity: 0;
			transform: translateY(20px);
			transition: all 0.6s ease-out;
		}

		.left-content.visible {
			opacity: 1;
			transform: translateY(0);
		}

		.left-content h1 {
			font-size: 2rem;
			line-height: 1.2;
			margin-bottom: 1.5rem;
		}

		.gradient-text,
		.feature-list li i {
			background: linear-gradient(90deg, #ff4081, #ff8c00);
			-webkit-background-clip: text;
			-webkit-text-fill-color: transparent;
		}

		.gradient-text-title {
			margin-top: 20px;
			padding-top: 20px;
		}

		.gradient-link {
			background: linear-gradient(90deg, #ff4081, #ff8c00);
			-webkit-background-clip: text;
			-webkit-text-fill-color: transparent;
		}

		.progress {
			background-color: transparent;
		}

		.logo-box {
			width: 80px;
			height: 80px;
			border-radius: 20px;
			overflow: hidden;
			box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
			margin: 2rem auto 1rem;
		}

		.feature-list {
			list-style: none;
			padding: 0;
			margin-bottom: 2rem;
		}

		.feature-list li {
			display: flex;
			align-items: center;
			color: #555;
			font-size: 0.95rem;
			margin-bottom: 0.75rem;
		}

		.feature-list li i {
			font-size: 1.2rem;
			margin-right: 0.75rem;
		}

		.card-login {
			position: relative;
			z-index: 3;
			max-width: 600px;
			width: 100%;
			border-radius: 20px;
			padding: 2.5rem 2rem;
			background: #fff;
			box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
		}

		.card-login h2 {
			font-size: 1.75rem;
			margin-bottom: 1rem;
			text-align: center;
		}

		.card-login .mb-3,
		.card-login .form-check {
			margin-bottom: 1rem !important;
		}

		.form-label {
			font-size: 0.95rem;
			margin-bottom: 0.5rem;
			font-weight: 500;
		}

		.form-control {
			padding: 0.75rem 1rem;
			font-size: 1rem;
		}

		.input-group .btn-eye {
			border: 0;
			background: #f8f9fa;
			padding: 0.4rem 0.8rem;
			display: flex;
			align-items: center;
		}

		.btn-gradient {
			background: linear-gradient(90deg, #ff4081, #ff8c00);
			border: none;
			color: #fff;
			padding: 0.75rem;
			font-size: 1rem;
			width: 100%;
			border-radius: 8px;
			transition: opacity 0.3s;
		}

		.btn-gradient:hover {
			opacity: .9;
		}

		#passwordStrengthBar {
			width: 0;
			height: 5px;
			transition: width 0.3s;
		}

		@media(max-width: 767.98px) {
			.vh-100 {
				height: auto !important;
			}

			.col-left {
				display: none !important;
			}

			.col-right,
			.container-fluid {
				background: #fff !important;
			}

			.col-right .bg-img,
			.col-right .overlay {
				display: none;
			}

			.col-right {
				padding: 2rem 1rem;
			}

			.card-login {
				max-width: 95%;
				width: auto;
				margin: 1rem auto;
				padding: 2rem 1rem;
			}

			input.form-control,
			.input-group > .form-control,
			.styled-input {
				width: 100% !important;
				box-sizing: border-box;
			}

			.input-group {
				flex-wrap: nowrap;
			}

			.row > .col,
			.row > .col-md-6 {
				flex: 0 0 100%;
				max-width: 100%;
			}

			.is-valid {
			border-color: #198754 !important;
		}
		.is-invalid {
			border-color: #dc3545 !important;
		}
		}
	</style>
{% endblock %}

{% block body %}
	<div class="container-fluid p-0">
		<div class="row g-0 vh-100">

			<div class="col-md-4 col-left d-none d-md-flex align-items-center">
				<div class="left-content">
					<div style="width: 80px; height: 80px; border-radius: 20px; overflow: hidden; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2); display: inline-flex; align-items: center; justify-content: center;">
						<img src="{{ asset('build/images/lodmico.png') }}" alt="Logo Lodmi" style="width: 100%; height: auto;">
					</div>
					<h1 class="fw-bold gradient-text-title">
						Rejoignez-nous et
						                profitez de<br/>notre
						<span class="gradient-text">solution!</span>
					</h1>
				</div>
			</div>

			<div class="col-12 col-md-8 col-right">
				<img src="{{ asset('build/images/backgroundclient.jpg') }}" class="bg-img" alt="Background">
				<div class="overlay"></div>

				<div class="card-login">
					<h2>INSCRIPTION</h2>

					{{ form_start(registrationForm, {'attr': {'id':'registration-form'}}) }}

					<div class="row g-3 mb-3">
						<div class="col">
							<label class="form-label" for="prenom">Prénom</label>
							{{ form_widget(registrationForm.name, { attr: { class: 'form-control', id: 'prenom' } }) }}
							<div class="invalid-feedback" id="error-name"></div>
						</div>
						<div class="col">
							<label class="form-label" for="nom">Nom</label>
							{{ form_widget(registrationForm.lastname, { attr: { class: 'form-control', id: 'nom' } }) }}
							<div class="invalid-feedback" id="error-lastname"></div>
						</div>
					</div>

					<div class="mb-3">
						<label class="form-label" for="email">Adresse email</label>
						{{ form_widget(registrationForm.email, { attr: { class: 'form-control', id: 'email' } }) }}
						<div class="invalid-feedback" id="error-email"></div>
					</div>

					<div class="mb-3">
						<label class="form-label" for="soc">Nom de l'entreprise</label>
						{{ form_widget(registrationForm.societyName, { attr: { class: 'form-control', id: 'soc' } }) }}
						<div class="invalid-feedback" id="error-societyName"></div>
					</div>

					<div class="row g-3 mb-3">
						<div class="col">
							<label class="form-label" for="phone">Téléphone</label>
							{{ form_widget(registrationForm.phone, { attr: { class: 'form-control', id: 'phone' } }) }}
							<div class="invalid-feedback" id="error-phone"></div>
						</div>
						<div class="col">
							<label class="form-label" for="siret">N° SIRET</label>
							{{ form_widget(registrationForm.siret, { attr: { class: 'form-control', id: 'siret' } }) }}
							<div class="invalid-feedback" id="error-siret"></div>
						</div>
					</div>

					<div class="mb-3">
						<label class="form-label" for="{{ registrationForm.password.first.vars.id }}">Mot de passe</label>
						<div class="input-group position-relative">
							{{ form_widget(registrationForm.password.first, {
								attr: {
									class: 'form-control',
									id: registrationForm.password.first.vars.id,
									onkeyup: 'checkPasswordStrength()'
								}
							}) }}
							<button type="button" class="btn-eye toggle-password" data-target="{{ registrationForm.password.first.vars.id }}">
								<i class="bi bi-eye"></i>
							</button>
						</div>
						<div class="invalid-feedback" id="error-password"></div>
						<div class="progress mt-2">
							<div id="passwordStrengthBar" class="progress-bar" style="width:0%"></div>
						</div>
						<small id="passwordStrengthText" class="text-muted">Au moins 8 caractères.</small>
					</div>

					<div class="mb-3">
						<label class="form-label" for="{{ registrationForm.password.second.vars.id }}">Confirmer le mot de passe</label>
						<div class="input-group position-relative">
							{{ form_widget(registrationForm.password.second, {
								attr: { class: 'form-control', id: registrationForm.password.second.vars.id }
							}) }}
							<button type="button" class="btn-eye toggle-password" data-target="{{ registrationForm.password.second.vars.id }}">
								<i class="bi bi-eye"></i>
							</button>
						</div>
						<div class="invalid-feedback" id="error-passwordConfirm"></div>
					</div>

					<div class="form-check mb-4">
						{{ form_widget(registrationForm.agreeTerms, { attr: { class: 'form-check-input me-2', id: 'registrationForm_agreeTerms' } }) }}
						<label class="form-check-label" for="registrationForm_agreeTerms">
							J’accepte les
							<a href="{{ path('app_cgu') }}" class="gradient-link text-decoration-underline">conditions générales</a>
						</label>
						<div class="invalid-feedback d-block" id="error-terms" style="margin-left: 1.5rem;"></div>
					</div>

					<button type="submit" id="registerButton" class="btn-gradient mb-2">S’INSCRIRE</button>

					{{ form_end(registrationForm) }}

					<p class="text-center mt-2 mb-0">
						Vous avez déjà un compte ?<br>
						<a href="{{ path('app_login') }}" class="gradient-link text-decoration-underline">Se connecter</a>
					</p>
				</div>
			</div>
		</div>
	</div>

	 <script>
	    document.addEventListener('DOMContentLoaded', () => {

		document.querySelectorAll('.form-control.is-invalid').forEach(el => {
			el.classList.remove('is-invalid');
		});
		document.querySelectorAll('.is-valid').forEach(el => {
			el.classList.remove('is-valid');
		});
			
	        document.querySelectorAll('.toggle-password').forEach(btn => {
	            btn.addEventListener('click', () => {
	                const input = document.getElementById(btn.dataset.target);
	                const icon = btn.querySelector('i');
	
	                if (!input) return;                            
	                if (input.type === 'password') {
	                    input.type = 'text';
	                    icon.classList.replace('bi-eye', 'bi-eye-slash');
	                } else {
	                    input.type = 'password';
	                    icon.classList.replace('bi-eye-slash', 'bi-eye');
	                }
	            });
	        });
	    });
	
	    function checkPasswordStrength() {
	        const pwd = document.getElementById('{{ registrationForm.password.first.vars.id }}').value;
	        const bar = document.getElementById('passwordStrengthBar');
	        const text = document.getElementById('passwordStrengthText');
	
	        let s = 0;
	        if (pwd.length >= 8) s++;
	        if (/[A-Z]/.test(pwd)) s++;
	        if (/[0-9]/.test(pwd)) s++;
	        if (/[^A-Za-z0-9]/.test(pwd)) s++;
	
	        const percent = s * 25;
	        bar.style.width = percent + '%';
	
	        if (percent < 25) {
	            bar.className = 'progress-bar bg-danger';
	            text.textContent = 'Très faible';
	        } else if (percent < 50) {
	            bar.className = 'progress-bar bg-warning';
	            text.textContent = 'Moyen';
	        } else if (percent < 75) {
	            bar.className = 'progress-bar bg-info';
	            text.textContent = 'Sécurisé';
	        } else {
	            bar.className = 'progress-bar bg-success';
	            text.textContent = 'Très sécurisé';
	        }
	    }
	
	    setTimeout(() => { document.querySelector('.left-content')?.classList.add('visible'); }, 300);
	</script>

	<script>
	document.addEventListener('DOMContentLoaded', () => {
		const submitBtn = document.querySelector('#registerButton');
		const get = id => document.getElementById(id);

		const errorMessages = {
			name: 'Le prénom doit contenir au moins 2 caractères.',
			lastname: 'Le nom doit contenir au moins 2 caractères.',
			email: 'Veuillez entrer une adresse email valide.',
			societyName: 'Le nom de l’entreprise est requis.',
			phone: 'Le numéro de téléphone doit être valide.',
			siret: 'Le numéro SIRET doit contenir exactement 14 chiffres.',
			password: 'Le mot de passe doit contenir au moins 8 caractères.',
			passwordConfirm: 'Les mots de passe ne correspondent pas.',
			terms: 'Vous devez accepter les conditions générales.'
		};

		const fields = {
			name: val => val.trim().length >= 2,
			lastname: val => val.trim().length >= 2,
			email: val => /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(val),
			societyName: val => val.trim().length >= 2,
			phone: val => /^0[1-9](\s|-|\.)?(\d{2}(\s|-|\.)?){4}$/.test(val),
			siret: val => /^\d{14}$/.test(val),
			password: val => val.length >= 8,
			passwordConfirm: () => {
				const pwd = get('registration_form_password_first');
				const conf = get('registration_form_password_second');
				return pwd && conf && pwd.value === conf.value;
			},
			terms: () => get('registration_form_agreeTerms')?.checked
		};

		const inputs = {
			name: get('registration_form_name'),
			lastname: get('registration_form_lastname'),
			email: get('registration_form_email'),
			societyName: get('registration_form_societyName'),
			phone: get('registration_form_phone'),
			siret: get('registration_form_siret'),
			password: get('registration_form_password_first'),
			passwordConfirm: get('registration_form_password_second'),
			terms: get('registration_form_agreeTerms')
		};

		function validate(forceDisplayErrors = false) {
			let allValid = true;

			for (const [key, validator] of Object.entries(fields)) {
				let value = '';
				if (key === 'passwordConfirm' || key === 'terms') {
				} else {
					value = inputs[key]?.value || '';
				}

				const isValid = validator(value);
				allValid = allValid && isValid;

				const errorEl = document.getElementById(`error-${key}`);

				if (errorEl) {
					errorEl.textContent = (!isValid && forceDisplayErrors) ? errorMessages[key] : '';
				}

				if (inputs[key] && key !== 'terms') {
					inputs[key].classList.toggle('is-valid', isValid && forceDisplayErrors);
					inputs[key].classList.toggle('is-invalid', !isValid && forceDisplayErrors);
				}
			}

			return allValid;
		}

		submitBtn?.addEventListener('click', (e) => {
			const isFormValid = validate(true);
			if (!isFormValid) {
				e.preventDefault();
			}
		});
	});
	</script>


{% endblock %}
