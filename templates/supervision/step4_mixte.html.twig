{% extends 'base.client.html.twig' %}

{% block body %}
	<div id="tarif-intro-mixte" class="transition-text">
		<p><strong>Merci de compléter chaque champ avec attention.</strong></p>
		<p>Ces paramètres sont essentiels pour un fonctionnement clair, équitable et conforme.</p>
		<p>
			Pour gérer l’exploitation et la refacturation de l’énergie de mes
			<strong>{{ totalConnectors }} points de charge</strong>, je renseigne les éléments suivants et je paramètre les tarifs d’utilisation.
		</p>

		<h5>Tarification pour les différentes utilisations et utilisateurs :</h5>
		<ul>
			<li>
				<strong>Pour les véhicules de flotte</strong> :
				tarification automatique. J'offre également
			</li>
			<li>
				<p>J’offre également la possibilité à mes collaborateurs (véhicules personnels) et au public extérieur de se recharger sur mes bornes.</p>
			</li>
		</ul>

		<p>
			Vous avez <strong>{{ acCount }} borne(s) AC</strong> et <strong>{{ dcCount }} borne(s) DC</strong>.
		</p>

		<button id="revealButtonMixte" class="btn btn-primary mt-3" type="button">Configurer la tarification</button>
	</div>

	<div id="tarif-details-mixte" class="mt-4 fade-expand">
		{{ form_start(form) }}

		{% if acCount >= 1 %}
			<fieldset class="mb-5 border p-3 rounded">
				<legend>Tarification pour les bornes AC</legend>
				<ul>
					<li id="ac-step1">
						{{ form_label(form.prix_collab) }}
						{{ form_widget(form.prix_collab) }} €HT/KWh
						<p class="error-message"></p>
					</li>
					<li id="ac-step2" style="display: none;">
						{{ form_label(form.prix_public) }}
						{{ form_widget(form.prix_public) }} €HT/KWh
						<p class="error-message"></p>
					</li>
					<li id="ac-step3" style="display: none;">
						{{ form_label(form.cout_minute) }}
						{{ form_widget(form.cout_minute) }} €HT
						<p class="error-message"></p>
					</li>
					<li id="ac-step4" style="display: none;">
						{{ form_label(form.penalite) }}
						{{ form_widget(form.penalite) }} €HT
						<p class="error-message"></p>
					</li>
				</ul>
			</fieldset>
		{% endif %}

		{% if dcCount >= 1 %}
			<fieldset class="mb-4 border p-3 rounded" id="dc-fields" style="display: none;">
				<legend>Tarification pour les bornes DC</legend>
				<ul>
					<li id="dc-step1">
						{{ form_label(form.prix_collab_dc) }}
						{{ form_widget(form.prix_collab_dc) }} €HT/KWh
						<p class="error-message"></p>
					</li>
					<li id="dc-step2" style="display: none;">
						{{ form_label(form.prix_public_dc) }}
						{{ form_widget(form.prix_public_dc) }} €HT/KWh
						<p class="error-message"></p>
					</li>
					<li id="dc-step3" style="display: none;">
						{{ form_label(form.cout_minute_dc) }}
						{{ form_widget(form.cout_minute_dc) }} €HT
						<p class="error-message"></p>
					</li>
					<li id="dc-step4" style="display: none;">
						{{ form_label(form.penalite_dc) }}
						{{ form_widget(form.penalite_dc) }} €HT
						<p class="error-message"></p>
					</li>
				</ul>
			</fieldset>
		{% endif %}

		<div id="submitBlock-mixte" class="mt-4" style="display: none;">
			<button type="submit" class="btn btn-primary">Valider les tarifs</button>
		</div>

		{{ form_end(form) }}
	</div>
{% endblock %}

{% block stylesheet %}
	<style>:root
	{
		--gray-color: #818285;
		--input-bg: #fff;
		--control-height: 50px;
		--shadow-inset: inset 0 3px 6px rgba(0, 0, 0, 0.1);
	}

	.transition-text.shrink {
		opacity: 0.5;
		font-size: 15px;
		transition: all 0.3s ease-in-out;
	}

	.fade-expand {
		overflow: hidden;
		opacity: 0;
		max-height: 0;
		transition: max-height 0.5s ease, opacity 0.4s ease;
	}

	.fade-expand.expanding {
		opacity: 1;
		max-height: 9999px;
	}


	.fade-expand.show {
		opacity: 1;
		max-height: 1000px;
	}

	.custom-input {
		background-color: var(--input-bg);
		border: none;
		border-radius: 15px;
		padding: 12px 15px;
		width: 100%;
		height: var(--control-height);
		box-shadow: var(--shadow-inset);
		outline: none;
		transition: box-shadow 0.2s ease-in-out;
	}
	.custom-input:focus {
		box-shadow: inset 0 3px 6px rgba(0, 0, 0, 0.15), 0 0 6px rgba(0, 0, 0, 0.05);
	}

	.tarif-details-mixte li p {
		font-size: 20px;
	}

	.hidden-step {
		display: list-item;
		list-style: none;
	}

	.hidden-step .bullet {
		display: inline-block;
		margin-right: 0.5rem;
	}

	.hidden-step.hidden-content {
		color: transparent;
	}

	#step1,
	#step2,
	#step3,
	#step4 {
		font-size: 18px;
	}
</style>

{% endblock %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', () => {
	const acCount = {{ acCount }};
	const dcCount = {{ dcCount }};

	console.log(acCount);
	console.log(dcCount);

	const revealBtn = document.getElementById('revealButtonMixte');
	const intro = document.getElementById('tarif-intro-mixte');
	const details = document.getElementById('tarif-details-mixte');
	const dcFields = document.getElementById('dc-fields');
	const submitBlock = document.getElementById('submitBlock-mixte');

	revealBtn.addEventListener('click', () => {
		intro.classList.add('shrink');
		details.classList.add('show');
		revealBtn.style.display = 'none';
		details.scrollIntoView({ behavior: 'smooth' });

		if (acCount === 0 && dcCount > 0) {
			dcFields.style.display = 'block';
		}
	});

	const steps = [];

	if (acCount >= 1) {
		steps.push(
			{ input: '{{ form.prix_collab.vars.id }}', next: 'ac-step2' },
			{ input: '{{ form.prix_public.vars.id }}', next: 'ac-step3' },
			{ input: '{{ form.cout_minute.vars.id }}', next: 'ac-step4' },
			{ input: '{{ form.penalite.vars.id }}', next: dcCount >= 1 ? 'dc-fields' : 'submitBlock-mixte' }
		);
	}
	
	{% if form.prix_collab_dc is defined %}
		if (dcCount >= 1) {
			steps.push(
				{ input: '{{ form.prix_collab_dc.vars.id }}', next: 'dc-step2' },
				{ input: '{{ form.prix_public_dc.vars.id }}', next: 'dc-step3' },
				{ input: '{{ form.cout_minute_dc.vars.id }}', next: 'dc-step4' },
				{ input: '{{ form.penalite_dc.vars.id }}', next: 'submitBlock-mixte' }
			);
		}
	{% endif %}

	steps.forEach(({ input, next }) => {
		const current = document.getElementById(input);
		const nextEl = document.getElementById(next);

		if (current && nextEl) {
			current.addEventListener('input', () => {
				if (current.value.trim() !== '') {
					nextEl.style.display = 'block';
				}
			});
		}
	});
});
</script>
<script>
document.addEventListener('DOMContentLoaded', () => {
	const form = document.querySelector('form');

	form.addEventListener('submit', (e) => {
		let hasError = false;

		// Nettoyage
		document.querySelectorAll('.styled-input').forEach(input => {
			input.classList.remove('is-invalid');
			const errorMsg = input.closest('li')?.querySelector('.error-message');
			if (errorMsg) errorMsg.textContent = '';
		});

		// Validation
		const inputs = form.querySelectorAll('.styled-input');
		inputs.forEach(input => {
			const val = input.value.trim();
			const errorMsg = input.closest('li')?.querySelector('.error-message');

			if (val === '' || isNaN(val)) {
				hasError = true;
				input.classList.add('is-invalid');
				if (errorMsg) {
					errorMsg.textContent = 'Veuillez entrer un nombre valide';
					errorMsg.classList.add('text-danger');
				}
			}
		});

		if (hasError) {
			e.preventDefault();
			form.scrollIntoView({ behavior: 'smooth' });
		}
	});
});
</script>
{% endblock %}